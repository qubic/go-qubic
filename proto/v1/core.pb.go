// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.23.4
// source: core.proto

package qubicpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity        *EntityInfo_Entity `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	ValidForTick  uint32             `protobuf:"varint,2,opt,name=valid_for_tick,json=validForTick,proto3" json:"valid_for_tick,omitempty"`
	SpectrumIndex int32              `protobuf:"varint,3,opt,name=spectrum_index,json=spectrumIndex,proto3" json:"spectrum_index,omitempty"`
	SiblingIds    []string           `protobuf:"bytes,4,rep,name=sibling_ids,json=siblingIds,proto3" json:"sibling_ids,omitempty"`
}

func (x *EntityInfo) Reset() {
	*x = EntityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityInfo) ProtoMessage() {}

func (x *EntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityInfo.ProtoReflect.Descriptor instead.
func (*EntityInfo) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{0}
}

func (x *EntityInfo) GetEntity() *EntityInfo_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *EntityInfo) GetValidForTick() uint32 {
	if x != nil {
		return x.ValidForTick
	}
	return 0
}

func (x *EntityInfo) GetSpectrumIndex() int32 {
	if x != nil {
		return x.SpectrumIndex
	}
	return 0
}

func (x *EntityInfo) GetSiblingIds() []string {
	if x != nil {
		return x.SiblingIds
	}
	return nil
}

type Computors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch      uint32   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Identities []string `protobuf:"bytes,2,rep,name=identities,proto3" json:"identities,omitempty"`
	Signature  string   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Digest     string   `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *Computors) Reset() {
	*x = Computors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Computors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Computors) ProtoMessage() {}

func (x *Computors) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Computors.ProtoReflect.Descriptor instead.
func (*Computors) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{1}
}

func (x *Computors) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Computors) GetIdentities() []string {
	if x != nil {
		return x.Identities
	}
	return nil
}

func (x *Computors) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Computors) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type QuorumVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SharedVotes                 []*QuorumVote_GroupedSharedVotes  `protobuf:"bytes,1,rep,name=shared_votes,json=sharedVotes,proto3" json:"shared_votes,omitempty"`
	SaltedVotesPerComputorIndex map[uint32]*QuorumVote_SaltedVote `protobuf:"bytes,2,rep,name=salted_votes_per_computor_index,json=saltedVotesPerComputorIndex,proto3" json:"salted_votes_per_computor_index,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QuorumVote) Reset() {
	*x = QuorumVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumVote) ProtoMessage() {}

func (x *QuorumVote) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumVote.ProtoReflect.Descriptor instead.
func (*QuorumVote) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{2}
}

func (x *QuorumVote) GetSharedVotes() []*QuorumVote_GroupedSharedVotes {
	if x != nil {
		return x.SharedVotes
	}
	return nil
}

func (x *QuorumVote) GetSaltedVotesPerComputorIndex() map[uint32]*QuorumVote_SaltedVote {
	if x != nil {
		return x.SaltedVotesPerComputorIndex
	}
	return nil
}

type TickData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComputorIndex  uint32                 `protobuf:"varint,1,opt,name=computor_index,json=computorIndex,proto3" json:"computor_index,omitempty"`
	Epoch          uint32                 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Tick           uint32                 `protobuf:"varint,3,opt,name=tick,proto3" json:"tick,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	VarStruct      string                 `protobuf:"bytes,5,opt,name=var_struct,json=varStruct,proto3" json:"var_struct,omitempty"`
	TimeLock       string                 `protobuf:"bytes,6,opt,name=time_lock,json=timeLock,proto3" json:"time_lock,omitempty"`
	TransactionIds []string               `protobuf:"bytes,7,rep,name=transaction_ids,json=transactionIds,proto3" json:"transaction_ids,omitempty"`
	ContractFees   []int64                `protobuf:"varint,8,rep,packed,name=contract_fees,json=contractFees,proto3" json:"contract_fees,omitempty"`
	Signature      string                 `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *TickData) Reset() {
	*x = TickData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickData) ProtoMessage() {}

func (x *TickData) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickData.ProtoReflect.Descriptor instead.
func (*TickData) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{3}
}

func (x *TickData) GetComputorIndex() uint32 {
	if x != nil {
		return x.ComputorIndex
	}
	return 0
}

func (x *TickData) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *TickData) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *TickData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TickData) GetVarStruct() string {
	if x != nil {
		return x.VarStruct
	}
	return ""
}

func (x *TickData) GetTimeLock() string {
	if x != nil {
		return x.TimeLock
	}
	return ""
}

func (x *TickData) GetTransactionIds() []string {
	if x != nil {
		return x.TransactionIds
	}
	return nil
}

func (x *TickData) GetContractFees() []int64 {
	if x != nil {
		return x.ContractFees
	}
	return nil
}

func (x *TickData) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type TickInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick                    uint32 `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
	DurationInSeconds       uint32 `protobuf:"varint,2,opt,name=duration_in_seconds,json=durationInSeconds,proto3" json:"duration_in_seconds,omitempty"`
	Epoch                   uint32 `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`
	NumberOfAlignedVotes    uint32 `protobuf:"varint,4,opt,name=number_of_aligned_votes,json=numberOfAlignedVotes,proto3" json:"number_of_aligned_votes,omitempty"`
	NumberOfMisalignedVotes uint32 `protobuf:"varint,5,opt,name=number_of_misaligned_votes,json=numberOfMisalignedVotes,proto3" json:"number_of_misaligned_votes,omitempty"`
	InitialTickOfEpoch      uint32 `protobuf:"varint,6,opt,name=initial_tick_of_epoch,json=initialTickOfEpoch,proto3" json:"initial_tick_of_epoch,omitempty"`
}

func (x *TickInfo) Reset() {
	*x = TickInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickInfo) ProtoMessage() {}

func (x *TickInfo) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickInfo.ProtoReflect.Descriptor instead.
func (*TickInfo) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{4}
}

func (x *TickInfo) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *TickInfo) GetDurationInSeconds() uint32 {
	if x != nil {
		return x.DurationInSeconds
	}
	return 0
}

func (x *TickInfo) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *TickInfo) GetNumberOfAlignedVotes() uint32 {
	if x != nil {
		return x.NumberOfAlignedVotes
	}
	return 0
}

func (x *TickInfo) GetNumberOfMisalignedVotes() uint32 {
	if x != nil {
		return x.NumberOfMisalignedVotes
	}
	return 0
}

func (x *TickInfo) GetInitialTickOfEpoch() uint32 {
	if x != nil {
		return x.InitialTickOfEpoch
	}
	return 0
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId  string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestId    string `protobuf:"bytes,2,opt,name=dest_id,json=destId,proto3" json:"dest_id,omitempty"`
	Amount    int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Tick      uint32 `protobuf:"varint,4,opt,name=tick,proto3" json:"tick,omitempty"`
	InputType uint32 `protobuf:"varint,5,opt,name=input_type,json=inputType,proto3" json:"input_type,omitempty"`
	InputSize uint32 `protobuf:"varint,6,opt,name=input_size,json=inputSize,proto3" json:"input_size,omitempty"`
	Input     string `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`
	Signature string `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	TxId      string `protobuf:"bytes,9,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Digest    string `protobuf:"bytes,10,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{5}
}

func (x *Transaction) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *Transaction) GetDestId() string {
	if x != nil {
		return x.DestId
	}
	return ""
}

func (x *Transaction) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *Transaction) GetInputType() uint32 {
	if x != nil {
		return x.InputType
	}
	return 0
}

func (x *Transaction) GetInputSize() uint32 {
	if x != nil {
		return x.InputSize
	}
	return 0
}

func (x *Transaction) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Transaction) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Transaction) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *Transaction) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type TickTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *TickTransactions) Reset() {
	*x = TickTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickTransactions) ProtoMessage() {}

func (x *TickTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickTransactions.ProtoReflect.Descriptor instead.
func (*TickTransactions) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{6}
}

func (x *TickTransactions) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type TickTransactionsStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick              uint32          `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
	CurrentTickOfNode uint32          `protobuf:"varint,2,opt,name=current_tick_of_node,json=currentTickOfNode,proto3" json:"current_tick_of_node,omitempty"`
	TxCount           uint32          `protobuf:"varint,3,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	StatusPerTx       map[string]bool `protobuf:"bytes,4,rep,name=status_per_tx,json=statusPerTx,proto3" json:"status_per_tx,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *TickTransactionsStatus) Reset() {
	*x = TickTransactionsStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickTransactionsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickTransactionsStatus) ProtoMessage() {}

func (x *TickTransactionsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickTransactionsStatus.ProtoReflect.Descriptor instead.
func (*TickTransactionsStatus) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{7}
}

func (x *TickTransactionsStatus) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *TickTransactionsStatus) GetCurrentTickOfNode() uint32 {
	if x != nil {
		return x.CurrentTickOfNode
	}
	return 0
}

func (x *TickTransactionsStatus) GetTxCount() uint32 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

func (x *TickTransactionsStatus) GetStatusPerTx() map[string]bool {
	if x != nil {
		return x.StatusPerTx
	}
	return nil
}

type EntityInfo_Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IncomingAmount             int64  `protobuf:"varint,2,opt,name=incoming_amount,json=incomingAmount,proto3" json:"incoming_amount,omitempty"`
	OutgoingAmount             int64  `protobuf:"varint,3,opt,name=outgoing_amount,json=outgoingAmount,proto3" json:"outgoing_amount,omitempty"`
	NumberOfIncomingTransfers  uint32 `protobuf:"varint,4,opt,name=number_of_incoming_transfers,json=numberOfIncomingTransfers,proto3" json:"number_of_incoming_transfers,omitempty"`
	NumberOfOutgoingTransfers  uint32 `protobuf:"varint,5,opt,name=number_of_outgoing_transfers,json=numberOfOutgoingTransfers,proto3" json:"number_of_outgoing_transfers,omitempty"`
	LatestIncomingTransferTick uint32 `protobuf:"varint,6,opt,name=latest_incoming_transfer_tick,json=latestIncomingTransferTick,proto3" json:"latest_incoming_transfer_tick,omitempty"`
	LatestOutgoingTransferTick uint32 `protobuf:"varint,7,opt,name=latest_outgoing_transfer_tick,json=latestOutgoingTransferTick,proto3" json:"latest_outgoing_transfer_tick,omitempty"`
}

func (x *EntityInfo_Entity) Reset() {
	*x = EntityInfo_Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityInfo_Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityInfo_Entity) ProtoMessage() {}

func (x *EntityInfo_Entity) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityInfo_Entity.ProtoReflect.Descriptor instead.
func (*EntityInfo_Entity) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{0, 0}
}

func (x *EntityInfo_Entity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntityInfo_Entity) GetIncomingAmount() int64 {
	if x != nil {
		return x.IncomingAmount
	}
	return 0
}

func (x *EntityInfo_Entity) GetOutgoingAmount() int64 {
	if x != nil {
		return x.OutgoingAmount
	}
	return 0
}

func (x *EntityInfo_Entity) GetNumberOfIncomingTransfers() uint32 {
	if x != nil {
		return x.NumberOfIncomingTransfers
	}
	return 0
}

func (x *EntityInfo_Entity) GetNumberOfOutgoingTransfers() uint32 {
	if x != nil {
		return x.NumberOfOutgoingTransfers
	}
	return 0
}

func (x *EntityInfo_Entity) GetLatestIncomingTransferTick() uint32 {
	if x != nil {
		return x.LatestIncomingTransferTick
	}
	return 0
}

func (x *EntityInfo_Entity) GetLatestOutgoingTransferTick() uint32 {
	if x != nil {
		return x.LatestOutgoingTransferTick
	}
	return 0
}

type QuorumVote_SharedVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch                     uint32                 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Tick                      uint32                 `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	Timestamp                 *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PrevResourceTestingDigest string                 `protobuf:"bytes,5,opt,name=prev_resource_testing_digest,json=prevResourceTestingDigest,proto3" json:"prev_resource_testing_digest,omitempty"`
	PrevSpectrumDigest        string                 `protobuf:"bytes,6,opt,name=prev_spectrum_digest,json=prevSpectrumDigest,proto3" json:"prev_spectrum_digest,omitempty"`
	PrevUniverseDigest        string                 `protobuf:"bytes,7,opt,name=prev_universe_digest,json=prevUniverseDigest,proto3" json:"prev_universe_digest,omitempty"`
	PrevComputerDigest        string                 `protobuf:"bytes,8,opt,name=prev_computer_digest,json=prevComputerDigest,proto3" json:"prev_computer_digest,omitempty"`
	TxDigest                  string                 `protobuf:"bytes,9,opt,name=tx_digest,json=txDigest,proto3" json:"tx_digest,omitempty"`
}

func (x *QuorumVote_SharedVote) Reset() {
	*x = QuorumVote_SharedVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumVote_SharedVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumVote_SharedVote) ProtoMessage() {}

func (x *QuorumVote_SharedVote) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumVote_SharedVote.ProtoReflect.Descriptor instead.
func (*QuorumVote_SharedVote) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{2, 0}
}

func (x *QuorumVote_SharedVote) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *QuorumVote_SharedVote) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *QuorumVote_SharedVote) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *QuorumVote_SharedVote) GetPrevResourceTestingDigest() string {
	if x != nil {
		return x.PrevResourceTestingDigest
	}
	return ""
}

func (x *QuorumVote_SharedVote) GetPrevSpectrumDigest() string {
	if x != nil {
		return x.PrevSpectrumDigest
	}
	return ""
}

func (x *QuorumVote_SharedVote) GetPrevUniverseDigest() string {
	if x != nil {
		return x.PrevUniverseDigest
	}
	return ""
}

func (x *QuorumVote_SharedVote) GetPrevComputerDigest() string {
	if x != nil {
		return x.PrevComputerDigest
	}
	return ""
}

func (x *QuorumVote_SharedVote) GetTxDigest() string {
	if x != nil {
		return x.TxDigest
	}
	return ""
}

type QuorumVote_GroupedSharedVotes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote          *QuorumVote_SharedVote `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	NumberOfVotes int32                  `protobuf:"varint,2,opt,name=number_of_votes,json=numberOfVotes,proto3" json:"number_of_votes,omitempty"`
}

func (x *QuorumVote_GroupedSharedVotes) Reset() {
	*x = QuorumVote_GroupedSharedVotes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumVote_GroupedSharedVotes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumVote_GroupedSharedVotes) ProtoMessage() {}

func (x *QuorumVote_GroupedSharedVotes) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumVote_GroupedSharedVotes.ProtoReflect.Descriptor instead.
func (*QuorumVote_GroupedSharedVotes) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{2, 1}
}

func (x *QuorumVote_GroupedSharedVotes) GetVote() *QuorumVote_SharedVote {
	if x != nil {
		return x.Vote
	}
	return nil
}

func (x *QuorumVote_GroupedSharedVotes) GetNumberOfVotes() int32 {
	if x != nil {
		return x.NumberOfVotes
	}
	return 0
}

type QuorumVote_SaltedVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceTestingDigest    string `protobuf:"bytes,1,opt,name=resource_testing_digest,json=resourceTestingDigest,proto3" json:"resource_testing_digest,omitempty"`
	SpectrumDigest           string `protobuf:"bytes,2,opt,name=spectrum_digest,json=spectrumDigest,proto3" json:"spectrum_digest,omitempty"`
	UniverseDigest           string `protobuf:"bytes,3,opt,name=universe_digest,json=universeDigest,proto3" json:"universe_digest,omitempty"`
	ComputerDigest           string `protobuf:"bytes,4,opt,name=computer_digest,json=computerDigest,proto3" json:"computer_digest,omitempty"`
	ExpectedNextTickTxDigest string `protobuf:"bytes,5,opt,name=expected_next_tick_tx_digest,json=expectedNextTickTxDigest,proto3" json:"expected_next_tick_tx_digest,omitempty"`
	Signature                string `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *QuorumVote_SaltedVote) Reset() {
	*x = QuorumVote_SaltedVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumVote_SaltedVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumVote_SaltedVote) ProtoMessage() {}

func (x *QuorumVote_SaltedVote) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumVote_SaltedVote.ProtoReflect.Descriptor instead.
func (*QuorumVote_SaltedVote) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{2, 2}
}

func (x *QuorumVote_SaltedVote) GetResourceTestingDigest() string {
	if x != nil {
		return x.ResourceTestingDigest
	}
	return ""
}

func (x *QuorumVote_SaltedVote) GetSpectrumDigest() string {
	if x != nil {
		return x.SpectrumDigest
	}
	return ""
}

func (x *QuorumVote_SaltedVote) GetUniverseDigest() string {
	if x != nil {
		return x.UniverseDigest
	}
	return ""
}

func (x *QuorumVote_SaltedVote) GetComputerDigest() string {
	if x != nil {
		return x.ComputerDigest
	}
	return ""
}

func (x *QuorumVote_SaltedVote) GetExpectedNextTickTxDigest() string {
	if x != nil {
		return x.ExpectedNextTickTxDigest
	}
	return ""
}

func (x *QuorumVote_SaltedVote) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

var File_core_proto protoreflect.FileDescriptor

var file_core_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x71, 0x75,
	0x62, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x04, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x72, 0x75, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x62, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x1a, 0xf2, 0x02, 0x0a, 0x06, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x41, 0x0a, 0x1d, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x1a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69,
	0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x22, 0x77,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0xc0, 0x08, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x72,
	0x75, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x56, 0x6f,
	0x74, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x56, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x56, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x7b, 0x0a, 0x1f, 0x73, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x6f, 0x74,
	0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x71, 0x75,
	0x62, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x56, 0x6f, 0x74,
	0x65, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x1b, 0x73, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x50,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a,
	0xe4, 0x02, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x1c, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x70, 0x72, 0x65, 0x76, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x72, 0x75, 0x6d, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x78, 0x5f,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x78,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x71, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65,
	0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x04,
	0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x56, 0x6f, 0x74, 0x65,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x76, 0x6f, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x76,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x1a, 0x9d, 0x02, 0x0a, 0x0a, 0x53, 0x61,
	0x6c, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x5f, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x72, 0x75, 0x6d, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x1c, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x5f, 0x74, 0x78, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4e, 0x65, 0x78, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x54, 0x78, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x6f, 0x0a, 0x20, 0x53, 0x61, 0x6c,
	0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d,
	0x56, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x02, 0x0a, 0x08, 0x54,
	0x69, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x27,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x65, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x08, 0x54,
	0x69, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x35, 0x0a, 0x17, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x41, 0x6c, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x69, 0x73, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x69, 0x73, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x6f, 0x66, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x63,
	0x6b, 0x4f, 0x66, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x8e, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x10, 0x54, 0x69, 0x63,
	0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8f, 0x02, 0x0a, 0x16, 0x54, 0x69, 0x63,
	0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x4f, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x78, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x65, 0x72, 0x54, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x72, 0x54, 0x78, 0x1a, 0x3e, 0x0a, 0x10, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x72, 0x54, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2f, 0x67,
	0x6f, 0x2d, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_proto_rawDescOnce sync.Once
	file_core_proto_rawDescData = file_core_proto_rawDesc
)

func file_core_proto_rawDescGZIP() []byte {
	file_core_proto_rawDescOnce.Do(func() {
		file_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_proto_rawDescData)
	})
	return file_core_proto_rawDescData
}

var file_core_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_core_proto_goTypes = []interface{}{
	(*EntityInfo)(nil),                    // 0: qubic.v1.EntityInfo
	(*Computors)(nil),                     // 1: qubic.v1.Computors
	(*QuorumVote)(nil),                    // 2: qubic.v1.QuorumVote
	(*TickData)(nil),                      // 3: qubic.v1.TickData
	(*TickInfo)(nil),                      // 4: qubic.v1.TickInfo
	(*Transaction)(nil),                   // 5: qubic.v1.Transaction
	(*TickTransactions)(nil),              // 6: qubic.v1.TickTransactions
	(*TickTransactionsStatus)(nil),        // 7: qubic.v1.TickTransactionsStatus
	(*EntityInfo_Entity)(nil),             // 8: qubic.v1.EntityInfo.Entity
	(*QuorumVote_SharedVote)(nil),         // 9: qubic.v1.QuorumVote.SharedVote
	(*QuorumVote_GroupedSharedVotes)(nil), // 10: qubic.v1.QuorumVote.GroupedSharedVotes
	(*QuorumVote_SaltedVote)(nil),         // 11: qubic.v1.QuorumVote.SaltedVote
	nil,                                   // 12: qubic.v1.QuorumVote.SaltedVotesPerComputorIndexEntry
	nil,                                   // 13: qubic.v1.TickTransactionsStatus.StatusPerTxEntry
	(*timestamppb.Timestamp)(nil),         // 14: google.protobuf.Timestamp
}
var file_core_proto_depIdxs = []int32{
	8,  // 0: qubic.v1.EntityInfo.entity:type_name -> qubic.v1.EntityInfo.Entity
	10, // 1: qubic.v1.QuorumVote.shared_votes:type_name -> qubic.v1.QuorumVote.GroupedSharedVotes
	12, // 2: qubic.v1.QuorumVote.salted_votes_per_computor_index:type_name -> qubic.v1.QuorumVote.SaltedVotesPerComputorIndexEntry
	14, // 3: qubic.v1.TickData.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 4: qubic.v1.TickTransactions.transactions:type_name -> qubic.v1.Transaction
	13, // 5: qubic.v1.TickTransactionsStatus.status_per_tx:type_name -> qubic.v1.TickTransactionsStatus.StatusPerTxEntry
	14, // 6: qubic.v1.QuorumVote.SharedVote.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 7: qubic.v1.QuorumVote.GroupedSharedVotes.vote:type_name -> qubic.v1.QuorumVote.SharedVote
	11, // 8: qubic.v1.QuorumVote.SaltedVotesPerComputorIndexEntry.value:type_name -> qubic.v1.QuorumVote.SaltedVote
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_core_proto_init() }
func file_core_proto_init() {
	if File_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Computors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickTransactionsStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityInfo_Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumVote_SharedVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumVote_GroupedSharedVotes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumVote_SaltedVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_proto_goTypes,
		DependencyIndexes: file_core_proto_depIdxs,
		MessageInfos:      file_core_proto_msgTypes,
	}.Build()
	File_core_proto = out.File
	file_core_proto_rawDesc = nil
	file_core_proto_goTypes = nil
	file_core_proto_depIdxs = nil
}
